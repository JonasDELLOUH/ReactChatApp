{"ast":null,"code":"var _jsxFileName = \"/media/dellouh/Nouveau nom/React career/projects/chat/src/components/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { db, storage } from '../firebase';\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore';\nimport { v4 as uuid } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {//TODO:Handle Error\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, \"chats\", data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text\n      },\n      [data.chatId + \".date\"]: serverTimestamp()\n    });\n    setText(\"\");\n    setImg(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type somethings...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Attach,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: \"none\"\n        },\n        id: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"LxBGUThHibwmApaPJomxIOCeC+Y=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/media/dellouh/Nouveau nom/React career/projects/chat/src/components/Input.jsx"],"names":["React","useContext","useState","Img","Attach","ChatContext","AuthContext","getDownloadURL","ref","uploadBytesResumable","db","storage","Timestamp","arrayUnion","doc","serverTimestamp","updateDoc","v4","uuid","Input","text","setText","img","setImg","currentUser","data","handleSend","storageRef","uploadTask","on","error","snapshot","then","downloadURL","chatId","messages","id","senderId","uid","date","now","user","e","target","value","display"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport Img from \"../img/img.png\";\nimport Attach from \"../img/attach.png\";\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { getDownloadURL, ref, uploadBytesResumable } from 'firebase/storage';\nimport { db, storage } from '../firebase';\nimport { Timestamp, arrayUnion, doc, serverTimestamp, updateDoc } from 'firebase/firestore';\nimport { v4 as uuid } from \"uuid\";\n\nconst Input = () => {\n\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (img) {\n      const storageRef = ref(storage, uuid());\n\n      const uploadTask = uploadBytesResumable(storageRef, img);\n\n      uploadTask.on(\n        (error) => {\n          //TODO:Handle Error\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateDoc(doc(db, \"chats\", data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n              }),\n            });\n          });\n        }\n      );\n    } else {\n      await updateDoc(doc(db, \"chats\", data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now(),\n        }),\n      });\n    }\n\n    await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n    });\n\n    await updateDoc(doc(db, \"userChats\", data.user.uid), {\n      [data.chatId + \".lastMessage\"]: {\n        text,\n      },\n      [data.chatId + \".date\"]: serverTimestamp(),\n    });\n\n    setText(\"\");\n    setImg(null);\n  };\n\n  return (\n    <div className='input'>\n      <input type='text' placeholder='Type somethings...' onChange={(e) => setText(e.target.value)}\n        value={text} />\n      <div className=\"send\">\n        <img src={Attach}  alt=''/>\n        <input type='file' style={{display: \"none\"}} id=\"file\" />\n        <label htmlFor='file'>\n          <img src={Img} alt='' />\n        </label>\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Input\n"]},"metadata":{},"sourceType":"module"}