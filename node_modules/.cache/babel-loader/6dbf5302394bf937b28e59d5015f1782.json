{"ast":null,"code":"var _jsxFileName = \"/media/dellouh/Nouveau nom/React career/projects/chat/src/components/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { collection, query, where, getDocs, setDoc, doc, updateDoc, serverTimestamp, getDoc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  const handleSearch = async () => {\n    console.log(\"bbb\");\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n\n  const handleKey = e => {\n    console.log(\"ahahah\");\n    e.code === \"Enter\" && handleSearch();\n  };\n\n  const handleSelected = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      await setDoc(doc(db, \"userChats\", currentUser.uid), {\n        combinedId: {\n          date: serverTimestamp(),\n          userInfo: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          }\n        }\n      });\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        }); //create user chats\n\n        await setDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {}\n\n    setUser(null);\n    setUsername(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value),\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"User not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelected,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"userChatInfo\",\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"rW7pV+YZr3DuX3ksDkEh3s7eDqQ=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/media/dellouh/Nouveau nom/React career/projects/chat/src/components/Search.jsx"],"names":["React","useState","useContext","collection","query","where","getDocs","setDoc","doc","updateDoc","serverTimestamp","getDoc","db","AuthContext","Search","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","console","log","q","querySnapshot","forEach","data","handleKey","e","code","handleSelected","combinedId","uid","res","date","userInfo","displayName","photoURL","exists","messages","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport {collection,\n  query,\n  where,\n  getDocs,\n  setDoc,\n  doc,\n  updateDoc,\n  serverTimestamp,\n  getDoc,} from \"firebase/firestore\";\nimport {db} from \"../firebase\";\nimport { AuthContext } from '../context/AuthContext';\n\nconst Search = () => {\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n\n  const {currentUser} = useContext(AuthContext)\n\n  const handleSearch = async () => {\n    console.log(\"bbb\");\n    const q = query(\n      collection(db, \"users\"), where(\"displayName\", \"==\", username)\n    );\n\n    try{\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n      setUser(doc.data());\n      });\n    } catch(err){\n      setErr(true)\n    }\n  };\n\n  const handleKey = (e) => {\n    console.log(\"ahahah\");\n    e.code === \"Enter\" && handleSearch();\n  }\n\n  const handleSelected = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId =\n      currentUser.uid > user.uid\n        ? currentUser.uid + user.uid\n        : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      await setDoc(doc(db, \"userChats\", currentUser.uid), {\n        combinedId:{\n          date: serverTimestamp(),\n          userInfo:{\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          }\n        },\n      });\n\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n        //create user chats\n        await setDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL,\n          },\n          [combinedId + \".date\"]: serverTimestamp(),\n        });\n      }\n    } catch (err) {}\n\n    setUser(null);\n    setUsername(\"\")\n  };\n\n  return (\n    <div className='search'>\n      <div className=\"searchForm\">\n        <input type='text' placeholder='Find a user' onKeyDown={handleKey} onChange={(e) => setUsername(e.target.value)} value={username} />\n      </div>\n      {err && <span>User not found!</span>}\n      { user &&\n        <div className=\"userChat\" onClick={handleSelected}>\n        <img src={user.photoURL} alt=''/>\n        <div className=\"userChatInfo\">\n          <span className=\"userChatInfo\">{user.displayName}</span>\n        </div>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}